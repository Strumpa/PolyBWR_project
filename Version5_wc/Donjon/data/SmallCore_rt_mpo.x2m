*----
* SmallCore_rt_mpo
*----
LINKED_LIST GEOM_OSC TRACK REFL MACRO SYS FLUX ;
MODULE GEO: TRIVAT: TRIVAA: FLUD: OUT: MCR: NCR: GREP: END: ;
HDF5_FILE CASEA :: FILE './Ass_3GLE_210-mpo.hdf' ;
HDF5_FILE CASEB :: FILE './Ass_3GLE_210_8Gd-mpo.hdf' ;
HDF5_FILE CASEC :: FILE './Ass_3GLE_320_16Gd-mpo.hdf' ;
HDF5_FILE CASED :: FILE './Ass_3GLE_420_16Gd-mpo.hdf' ;
SEQ_ASCII _REFL :: FILE './_OSC_reflector.txt' ;
PROCEDURE assertS ;
*----
*  Local parameters
*----
REAL keff1 ;
REAL densB1 := 700.0 ; ! reference Boron concentration in ppm
REAL dens_mod := 0.7 ; ! reference coolant density (g/cc)
*
************************************************************************
*  GEOMETRY AND TRACKING                                               *
************************************************************************
REAL cote := 21.504 ;
REAL mesh1 := cote ;
REAL mesh2 := mesh1 cote + ;
REAL mesh3 := mesh2 cote + ;
REAL mesh4 := mesh3 cote + ;
REAL mesh5 := mesh4 cote + ;
REAL mesh6 := mesh5 cote + ;
REAL mesh7 := mesh6 cote + ;
REAL mesh8 := mesh7 cote + ;
REAL mesh9 := mesh8 cote + ;
REAL mesh10 := mesh9 cote + ;
REAL mesh11 := mesh10 cote + ;
*
GEOM_OSC := GEO: :: CAR2D 11 11
  EDIT 0
  X- VOID X+ VOID
  Y- VOID Y+ VOID
  MIX
  0 0 5 5 5 5 5 5 5 0 0
  0 5 5 4 4 4 4 4 5 5 0
  5 5 4 4 2 2 2 4 4 5 5
  5 4 4 3 2 3 2 3 4 4 5
  5 4 2 2 3 2 3 2 2 4 5
  5 4 2 3 2 1 2 3 2 4 5
  5 4 2 2 3 2 3 2 2 4 5
  5 4 4 3 2 3 2 3 4 4 5
  5 5 4 4 2 2 2 4 4 5 5
  0 5 5 4 4 4 4 4 5 5 0
  0 0 5 5 5 5 5 5 5 0 0
  MESHX 0.0 <<mesh1>> <<mesh2>> <<mesh3>> <<mesh4>> <<mesh5>> <<mesh6>>
        <<mesh7>> <<mesh8>> <<mesh9>> <<mesh10>> <<mesh11>>
  MESHY 0.0 <<mesh1>> <<mesh2>> <<mesh3>> <<mesh4>> <<mesh5>> <<mesh6>>
        <<mesh7>> <<mesh8>> <<mesh9>> <<mesh10>> <<mesh11>>
  SPLITX 2 2 2 2 2 2 2 2 2 2 2
  SPLITY 2 2 2 2 2 2 2 2 2 2 2
;
TRACK := TRIVAT: GEOM_OSC ::
     TITLE 'SMALL CORE 9x9 BENCHMARK'
     EDIT 0 MAXR 3000 DUAL 3 1 ;

************************************************************************
*  MULTICOMPO IMPORT OF THE REFLECTOR                                  *
************************************************************************
REFL := _REFL ;
ECHO "Multicompo exportation completed" ;

************************************************************************
*  CALCULATION OF MODERATOR DATA                                       *
************************************************************************
REAL A := 6.022094E-1 ; ! Avogadro number

REAL P_B10 P_B11 := 0.202 0.798 ;
REAL M_H2O := 15.9994 2.0 1.00794 * + ;
REAL M_B := P_B10 10.012938 * P_B11 11.009276 * + ;
REAL f1 := 1.0 1.0E-06 densB1 * - ;
REAL f2 := 1.0E-06 densB1 * ;
REAL N_O16 := dens_mod f1 A * * M_H2O / ;
REAL N_H1 := 2.0 N_O16 * ;
REAL N_B10 := P_B10 dens_mod f2 A * * * M_B / ;
REAL N_B11 := P_B11 dens_mod f2 A * * * M_B / ;
ECHO "Mix_UOX N_O16=" N_O16 ;
ECHO "Mix_UOX N_H1=" N_H1 ;
ECHO "Mix_UOX B10=" N_B10 ;
ECHO "Mix_UOX B11=" N_B11 ;

************************************************************************
*  MPO INTERPOLATION AT 700 ppm BORON                                  *
************************************************************************
ECHO densB1 "ppm boron is" N_B10 "b10 nuclii concentration" ;
MACRO :=  MCR:  CASEA CASEB CASEC CASED :: EDIT 3 MACRO NMIX 5
   MPO CASEA output_0 MIX  1 SET 'BURN' 0.0 SET 'C_B10_WATER' <<N_B10>>
                      ENDMIX
   MPO CASEB output_0 MIX  2 SET 'BURN' 0.0 SET 'C_B10_WATER' <<N_B10>>
                      ENDMIX
   MPO CASEC output_0 MIX  3 SET 'BURN' 0.0 SET 'C_B10_WATER' <<N_B10>>
                      ENDMIX
   MPO CASED output_0 MIX  4 SET 'BURN' 0.0 SET 'C_B10_WATER' <<N_B10>>
                      ENDMIX
;

************************************************************************
*  MULTICOMPO INTERPOLATION AT 700 ppm BORON                           *
************************************************************************
MACRO :=  NCR:  MACRO REFL :: EDIT 2 MACRO NMIX 5
   COMPO REFL Radial MIX  5 FROM 2 SET 'C-BORE' <<densB1>> SET 'Method'
                     'ERM-NEM' SET 'Palier' 'FA3' ENDMIX
;

************************************************************************
*  FLUX SOLUTION (RAVIART-THOMAS METHOD)                               *
************************************************************************
SYS := TRIVAA: MACRO TRACK ;
FLUX := FLUD: SYS TRACK :: EDIT 1 ADI 4 ACCE 5 3 ;
GREP: FLUX  :: GETVAL 'K-EFFECTIVE ' 1  >>keff1<<  ;
assertS FLUX :: 'K-EFFECTIVE' 1 1.034929 ;

ECHO "test SmallCore_rt_mpo.x2m completed" ;
END: ;
