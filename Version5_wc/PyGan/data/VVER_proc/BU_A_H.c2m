*********************************************************************************************************************************
*                                                                                                                               *
* Procedure :  BU_A_N.c2m                                                                                                       *
* Purpose   :  Depletion calculus for REL2005 assemblies                                                                        *
* Author    :  L.Fede                                                                                                           *
*                                                                                                                               *
* CALL      :                                                                                                                   *
* COMPO := BU_A_H LIBRARY TRACK_2L TF_EXC TRACK_1L TRACK_SS StepList :: <<Multicompo>> <<name_geom>> <<name_compo>> <<AUTOP>>   *
*                                                                                                                               *
*********************************************************************************************************************************

* ---
* INPUT & OUTPUT PARAMETERS
* ---
PARAMETER COMPO LIBRARY TRACK_2L TF_EXC TRACK_1L TRACK_SS StepList ::
::: LINKED_LIST COMPO ;
::: LINKED_LIST LIBRARY ; 
::: LINKED_LIST TRACK_2L ;
::: SEQ_BINARY TF_EXC ;
::: LINKED_LIST TRACK_1L ;
::: LINKED_LIST TRACK_SS ;
::: LINKED_LIST StepList ; ;

INTEGER Multicompo ;
:: >>Multicompo<< ;

STRING name_geom name_compo AUTOP ;
:: >>name_geom<< >>name_compo<< >>AUTOP<< ;

* ---
* STRUCTURES AND MODULES
* ---
MODULE  MAC: DELETE: UTL: USS: ASM: FLU: EVO: GREP: EXCELT: PSP: COMPO:
        SPH: EDI: END: ;

PROCEDURE mixAUTOP1_AH mixAUTOP2_AH mixHOM mixLIBEQ EDIT_A_H ;

LINKED_LIST EDITION SYS FLUX FLUX2 BURNUP FIG EDIBU LIBRARY2 LIBEQ ;

SEQ_ASCII _COMPO :: FILE <<name_compo>> ;


************************************************************************
*  REFERENCE LOCAL PARAMETERS                                          *
************************************************************************
SEQ_ASCII TDT_VVER :: FILE './testVVER_1level_g2s.txt' ;
SEQ_ASCII FIG_VVER :: FILE './FIG_VVER_1level.ps' ;
STRING Library := "DLIB_J3p1p1" ;
REAL Kinf ;
ECHO "vverBU: Multicompo=" Multicompo ;
 
************************************************************************
*  BEGIN DECLARATION                                                   *
************************************************************************
INTEGER nstep nauto maxcompo ;
GREP: StepList :: LENGTH ListBU >>nstep<< ;
GREP: StepList :: LENGTH ListAutop >>nauto<< ;
GREP: StepList :: LENGTH ListCompo >>maxcompo<< ;
ECHO "nstep=" nstep "nauto=" nauto "maxcompo=" maxcompo ;
************************************************************************
*  END DECLARATION                                                     *
************************************************************************

************************************************************************
*  BEGIN COMPO INITIALIZATION                                          *
************************************************************************
COMPO := COMPO: ::
    EDIT 10
    STEP UP 'EDIBU_HOM'
     MAXCAL 5
     COMM 'Evolution burnup - Condensed - Assembly scale homogenized' ENDC
     PARA 'Burnup' IRRA
     ISOT 11 U235 U236 U238 Pu239 Pu240 Pu241 Pu242 Gd155 Gd157 Xe135 Sm149
    INIT
    STEP UP 'EDIBU'
     MAXCAL 5
     COMM 'Evolution burnup - Condensed - Cells scale homogenized' ENDC
     PARA 'Burnup' IRRA
     ISOT 11 U235 U236 U238 Pu239 Pu240 Pu241 Pu242 Gd155 Gd157 Xe135 Sm149
    INIT
    STEP UP 'EDIBU_2gr'
     MAXCAL 5
     COMM 'Evolution burnup - Condensed 2gr - Cells scale homogenized' ENDC
     PARA 'Burnup' IRRA
     ISOT 11 U235 U236 U238 Pu239 Pu240 Pu241 Pu242 Gd155 Gd157 Xe135 Sm149
    INIT
;
************************************************************************
*  END COMPO INITIALIZATION                                            *
************************************************************************

************************************************************************
*  NOMINAL REFERENCE CALCULATION                                       *
************************************************************************
INTEGER istepNext ;
REAL BUbeg Tbeg ;
REAL BU BUautop BUcompo := 0.0 0.0 0.0 ;
REAL Norm_f2 := 36.8577 ; ! SPECIFIC POWER MW/t
REAL BUend Tend := 0. 0. ;
INTEGER istep :=  0 ;
INTEGER iauto :=  1 ;
INTEGER iCompo :=  1 ;


**********************************************
*  BEGIN DEPLETION                           *
**********************************************
ECHO "start burnup loop" ;
WHILE istep nstep < DO

 EVALUATE istep := istep 1 + ;
 ECHO "burnup step: " istep "/" nstep ;
 
 EVALUATE BUbeg Tbeg := BUend Tend ;
 GREP: StepList :: GETVAL 'ListBU' <<istep>> >>BUend<< ;
 EVALUATE Tend := BUend Norm_f2 / ;
 ECHO "Nominal depletion between" Tbeg " and" Tend "days" ;


****************************
*  BEGIN SELF-SHIELDING    *
****************************
  IF istep 1 = THEN
     ECHO ".perform initial self-shielding at" Tbeg "days" ;

     ECHO "$$$ ------------- begin : mixAUTOP1 " ;
     LIBRARY2 := mixAUTOP1_AH LIBRARY TRACK_SS :: <<name_geom>> <<AUTOP>> ;
     ECHO "$$$ ------------- end : mixAUTOP1 " ;

  ELSE
     GREP: StepList :: GETVAL "ListAutop" <<iauto>> >>BUautop<< ;
     GREP: StepList :: GETVAL "ListBU" <<istep>> >>BU<< ;
     IF BUautop BU = THEN
       ECHO "perform self-shielding at" Tbeg "days" ;

       ECHO "$$$ ------------- begin : mixAUTOP2 " ;
       LIBRARY2 := mixAUTOP2_AH LIBRARY2 LIBRARY TRACK_SS :: <<name_geom>> <<AUTOP>> ;
       ECHO "$$$ ------------- end : mixAUTOP2 " ;

       EVALUATE iauto := iauto 1 + ;
     ENDIF ;
  ENDIF ;

****************************
*  END OF SELF-SHIELDING   *
****************************

************************************************************
*  BEGIN 1st LEVEL CALCULATION                             *
************************************************************
  ECHO "$$$ ------------- begin : 1st LEVEL CALCULATION " "*** burnup step = " istep "/" nstep ;

  IF istep 1 > THEN
  ECHO "$$$ ------------- begin : mixHOM " "*** burnup step = " istep "/" nstep ;
    ! Homogenize from 2L mixtures to 1L mixtures and
    ! Condense to 1-group in order to average number densities
    ! Recover number densities and copy them in LIBRARY2
    LIBRARY2 := mixHOM LIBRARY2 FLUX2 LIBEQ TRACK_2L :: <<name_geom>> ;

    ECHO "$$$ ------------- begin : vverBU_A DELETE: " "*** burnup step = " istep "/" nstep ;
    LIBEQ := DELETE: LIBEQ ;
    ECHO "$$$ ------------- end : vverBU_A DELETE: " "*** burnup step = " istep "/" nstep ;

  ECHO "$$$ ------------- end : mixHOM " "*** burnup step = " istep "/" nstep ;
  ENDIF ;

  SYS := ASM: LIBRARY2 TRACK_1L :: ARM EDIT 0 ; 
   
  FLUX := FLU: LIBRARY2 SYS TRACK_1L :: 
    EDIT 1
    TYPE K
    B1
    SIGS ;

  ! 26 groups energy condensation
  EDITION := EDI: FLUX LIBRARY2 TRACK_1L ::
    EDIT 0
    MICR ALL
    MERG MIX
    COND  10  14  18  26  33  40  49  56  66 84 150 210 241 244 247
    252 255 258 261 268 273 277 281 286 291
    SAVE ON COND26 ;

  LIBEQ := EDITION ::
    STEP UP COND26 ;

  LIBEQ := SPH: LIBEQ TRACK_1L ::
    EDIT 0
    GRMAX 22 ;

  FLUX SYS EDITION := DELETE: FLUX SYS EDITION ;

  ECHO "$$$ ------------- end : 1st LEVEL CALCULATION " "*** burnup step = " istep "/" nstep ;
************************************************************
*  END OF 1st LEVEL CALCULATION                            *
************************************************************
 
************************************************************
*  BEGIN 2nd LEVEL CALCULATION                            *
************************************************************
  ECHO "$$$ ------------- begin : 2nd LEVEL CALCULATION " ;

  ECHO "$$$ ------------- begin : mixLIBEQ " "*** burnup step = " istep "/" nstep ;
  LIBEQ := UTL: LIBEQ :: DIR ;
  LIBEQ := mixLIBEQ LIBEQ :: <<name_geom>> ;
  ECHO "$$$ ------------- end : mixLIBEQ " "*** burnup step = " istep "/" nstep ;
  LIBEQ := UTL: LIBEQ :: DIR ;

  ECHO "$$$ ------------- begin : ASM: 2L " "*** burnup step = " istep "/" nstep ;
  SYS := ASM: LIBEQ TRACK_2L TF_EXC ::
    ARM
    EDIT 0 ;
  ECHO "$$$ ------------- end : ASM: 2L " "*** burnup step = " istep "/" nstep ;

  ECHO "$$$ ------------- begin : FLU: 2L " "*** burnup step = " istep "/" nstep ;
  IF istep 1 = THEN
    FLUX2 := FLU: LIBEQ SYS TRACK_2L TF_EXC ::
      EDIT 1
      TYPE K ;
  ELSE
    FLUX2 := FLU: FLUX2 LIBEQ SYS TRACK_2L TF_EXC ::
      EDIT 1
      TYPE K ;
  ENDIF ;
  ECHO "$$$ ------------- end : FLU: 2L " "*** burnup step = " istep "/" nstep ;

  ECHO "$$$ ------------- begin : EVO: 2L " "*** burnup step = " istep "/" nstep ;
  IF istep 1 = THEN
    BURNUP LIBEQ := EVO: LIBEQ FLUX2 TRACK_2L ::
      EDIT 0
      SAVE <<Tbeg>> DAY POWR <<Norm_f2>>
    ;
  ELSE
    BURNUP LIBEQ := EVO: BURNUP LIBEQ FLUX2 TRACK_2L ::
      EDIT 0
      SAVE <<Tbeg>> DAY POWR <<Norm_f2>>
    ;
  ENDIF ;
  ECHO "$$$ ------------- end : EVO: 2L " "*** burnup step = " istep "/" nstep ;

  SYS := DELETE: SYS ;

  ECHO "$$$ ------------- end : 2nd LEVEL CALCULATION " "*** burnup step = " istep "/" nstep ;
************************************************************
*  END OF 2nd LEVEL CALCULATION                            *
************************************************************

************************************************************
*  BEGIN EDITION & COMPO UPDATE                            *
************************************************************

  GREP: StepList :: GETVAL "ListCompo" <<iCompo>> >>BUcompo<< ;
  GREP: StepList :: GETVAL "ListBU" <<istep>> >>BU<< ;
 
    IF BUcompo BU = THEN

      ECHO "$$$ ------------- begin : vverEDIT " ;
      COMPO := EDIT_A_H FLUX2 LIBEQ TRACK_2L COMPO BURNUP :: <<Tbeg>> <<name_geom>> ;
      ECHO "$$$ ------------- end : vverEDIT " ;
 
      EVALUATE iCompo := iCompo 1 + ;

    ENDIF ;

************************************************
*  END EDITION & COMPO UPDATE                  *
************************************************

  GREP: FLUX2 :: GETVAL 'K-INFINITY  ' 1 1 1 >>Kinf<< ;
  ECHO "+++ Burnup=" BUend " Kinf=" Kinf " at step" istep ;

  IF istep nstep < THEN
    EVALUATE istepNext := istep 1 + ;
    GREP: StepList :: GETVAL 'ListBU' <<istepNext>> >>BUend<< ;
    EVALUATE Tend := BUend Norm_f2 / ;
  
    BURNUP LIBEQ := EVO: BURNUP LIBEQ FLUX2 TRACK_2L ::
     EDIT 0 DEPL <<Tbeg>> <<Tend>> DAY POWR <<Norm_f2>> 
     EXPM 1.0E15 GLOB ;
  
  ENDIF ;
 
*********************************************************
*  END FLUX CALCULATION                                 *
*********************************************************
ENDWHILE ;

************************************************************************
*  END OF REFERENCE BURNUP LOOP WITH DEPLETION                         *
************************************************************************

************************************************************************
*  EXPORT MULTICOMPO IN ASCII FORMAT                                   *
************************************************************************
_COMPO := COMPO ;

END: ;
QUIT .
