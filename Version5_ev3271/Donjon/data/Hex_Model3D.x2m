******************************************************************
*                                                                *
* Nom       : Hex_Model3D.x2m                                    *
* Type      : DONJON file                                        *
* Author(s) : I. Trancart (2024)                                 *
*                                                                *
******************************************************************
*---- 
*  Modules and linked_lists 
*---- 
LINKED_LIST GeoRef Matex Trkcore Fmap Mycompo Macrofl Macrore Macro2
            System Flux ; 
MODULE      SNT: RESINI: CRE: MACINI: ASM: FLU: DELETE: UTL: END: ; 
PROCEDURE   Ssr ;
SEQ_ASCII   Data.dds :: FILE 'Data.dds' ;
PROCEDURE   assertS ;

*--
* variables:
*--
INTEGER degree quadr := 1 1 ;
STRING Method := "SN" ;
REAL Keff ;
REAL Power := 900.0 ;
*---- 
*  Recover multicompos data for micro fuel
*---- 
*---- 
*  Define reference geometry (GeoRef) and calculation geometry (Matex)
*---- 
INTEGER iPavH := 4 ;
INTEGER Splitl :=  1 ; 
REAL    dr   := 21.544 3.0 SQRT / ;
INTEGER MaxR ;
 
EVALUATE MaxR := iPavH iPavH 1 + * 3 * 1 + 3 * 3 Splitl Splitl * * *  ;
ECHO "Nombre maximal de regions : " MaxR ;
 
GeoRef Matex := Ssr :: 
       <<Splitl>> <<MaxR>> <<dr>> ;
ECHO "Procedure Ssr completed" ;
SEQ_ASCII GeoRef.txt :: FILE './GeoRef.txt' ;
UTL: GeoRef :: DUMP ;
*--
* Discretisation numerique :
*--

* ESCHM 1 Correspond a HODD
* DSA 5 - Benchmark hex - 2 - parabolic != tra- 2 - TRIVAC for 3D
* QUAD 2 -default/mu1 optimized level symmetric- OR 10 -Gauss-Legendre (equal base points axial)
IF Method "SN" = THEN 
  Trkcore := SNT: GeoRef :: EDIT 3
  SN 4 EPSI 1.0E-5 ;
ENDIF ;
*--
* Set the fuel map
*--
Fmap Matex := RESINI: Matex ::
 EDIT 99
 ::: GEO: HEXZ 10 2
  EDIT 10
  HBC SA60 VOID SIDE <<dr>>
  SIDE <<dr>>
  Z- VOID Z+ VOID
  MESHZ 0.0 1.0 2.0
  SPLITL 1
  MIX
  PLANE 1
  2
* H1
  2 2
* H2
  3 3 3
* H3
  0 0 0 0
  PLANE 2
  2
* H1
  2 2
* H2
  3 3 3
* H3
  0 0 0 0
  ;
  NCOMB ALL
  BTYPE INST-BURN
  INST-BVAL SAME 0.0
;
*---
* Fuel-map macrolib
*---
Mycompo := Data.dds ;
ECHO "Recover fuel properties" ;
Macrofl := CRE:  Mycompo Fmap :: EDIT 4 READ
 TABLE Mycompo
             MIX 2  'FE_Fuel    1' ENDMIX
             MIX 3  'CR_Fuel    1' ENDMIX
  ;
*---
* Reflector macrolib
*---
ECHO "Recover reflector properties" ;
Macrore := CRE:  Mycompo :: EDIT 4 NMIX 1 READ
 COMPO Mycompo
             MIX 1  'Water      1' ENDMIX
  ;
!*******************************************
Macro2 Matex := MACINI: Matex Macrore Macrofl :: EDIT 0 ;
Macrofl Macrore := DELETE: Macrofl Macrore ;
!*******************************************
*---
* Flux solution
*---
System := ASM: Macro2 Trkcore :: ARM ;
Flux :=  FLU: Macro2 Trkcore System ::
  EDIT 2 TYPE K EXTE 100 5.0E-8 ;
assertS Flux :: 'K-EFFECTIVE' 1 1.087955 ;
ECHO "test Hex_Model3D.x2m completed" ;
END: ;
QUIT "LIST" .
