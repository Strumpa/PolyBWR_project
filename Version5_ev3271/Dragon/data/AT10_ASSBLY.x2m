* DECK AT10_ASSBLY.x2m
* Puropse : perform AT10 Assembly calculation
* Author : R. Guasch
* 
* Testing Geometric definition, analysis and tracking capabilities for modules
*         Geo:, NXT:, G2S:, SALT:
*
* Dependant on procedures : Geom_A.c2m
*
* 


MODULE GEO: G2S: SALT: TLM: NXT: USS: ASM: FLU: GREP: END: ;

PROCEDURE Geom_A Geom_A2 TRK_A_SALT Mix_ASSBLY ;

LINKED_LIST GEOM GEOM_SS TRACK TRACK_SS LIBRARY ;

LINKED_LIST LIBRARY2 SYS FLUX ;

SEQ_ASCII Geo_G2S GeoSS_G2S ;
SEQ_BINARY TRACK_EXC TRACKSS_EXC ;
SEQ_ASCII FIG_main.ps :: FILE './FIG_main.ps' ;
SEQ_ASCII FIG_SS.ps :: FILE './FIG_selfshielding.ps' ;
SEQ_ASCII TLM_F :: FILE 'tracks_SALT_ASSBLY.m' ;
SEQ_ASCII TLM_SS :: FILE 'tracks_SALT_SS_ASSBLY.m' ;
REAL Kinf ;


STRING geo_name := "AT10_ASSBLY_test" ; ! Geometry choice for tests and benchmarks
STRING assbly_opt := "AT10_nominal" ; ! option to choose from possible mixes, 0% (nominal), 40% and 80% void fraction

! 3 level BWR geometry definition
GEOM GEOM_SS := Geom_A :: <<geo_name>> ;
ECHO "3 level Geometry generated" ;

! Call to trackin module
Geo_G2S FIG_main.ps TRACK TRACK_EXC GeoSS_G2S FIG_SS.ps TRACK_SS TRACKSS_EXC := TRK_A_SALT GEOM GEOM_SS ;



ECHO "Geometry tracking with G2S: -> SALT: completed" ;

LIBRARY := Mix_ASSBLY :: J311_295 <<assbly_opt>> ;

ECHO "Mixes for ASSBLY :" assbly_opt " retrieved"  ;


************************************************************************
*  BEGIN SELF SHIELDING CALCULATION                                    *
************************************************************************

LIBRARY2 := USS: LIBRARY TRACK_SS TRACKSS_EXC ::
            EDIT 1 PASS 3 GRMIN 52
          CALC 
* ALL CELLS
               REGI W1 U235  ALL
               REGI W1 U236  ALL
               REGI W1 Pu239 ALL
               REGI W1 Pu240 ALL
               REGI W1 Pu241 ALL
               REGI W1 Pu242 ALL

               REGI W1 Gd154 ALL
               REGI W1 Gd155 ALL
               REGI W1 Gd156 ALL
               REGI W1 Gd157 ALL
               REGI W1 Gd158 ALL

               REGI W1 Zr90 ALL
               REGI W1 Zr91 ALL
               REGI W1 Zr92 ALL
               REGI W1 Zr94 ALL
               REGI W1 Zr96 ALL

               REGI W1 U238 1
               REGI W2 U238 2
               REGI W3 U238 3
               REGI W4 U238 4

               REGI W1 U238 21
               REGI W2 U238 22
               REGI W3 U238 23
               REGI W4 U238 24

               REGI W1 U238 31
               REGI W2 U238 32
               REGI W3 U238 33
               REGI W4 U238 34

               REGI W1 U238 41
               REGI W2 U238 42
               REGI W3 U238 43
               REGI W4 U238 44

               REGI W1 U238 51
               REGI W2 U238 52
               REGI W3 U238 53
               REGI W4 U238 54

               REGI W1 U238 61
               REGI W2 U238 62
               REGI W3 U238 63
               REGI W4 U238 64

               REGI W1 U238 71
               REGI W2 U238 72
               REGI W3 U238 73
               REGI W4 U238 74
               REGI W4 U238 75
               REGI W4 U238 76

               REGI W1 U238 81
               REGI W2 U238 82
               REGI W3 U238 83
               REGI W4 U238 84
               REGI W4 U238 85
               REGI W4 U238 86
            ENDC
         ;

************************************************************************
*  BEGIN MOC FLUX CALCULATION                                          *
************************************************************************

SYS := ASM: LIBRARY2 TRACK TRACK_EXC :: ARM EDIT 0 ; 

FLUX := FLU: LIBRARY2 SYS TRACK TRACK_EXC :: 
             EDIT 1 TYPE K B1 SIGS 
      ;
GREP: FLUX :: GETVAL 'K-INFINITY  ' 1 1 1 >>Kinf<< ;

ECHO assbly_opt " t=0 calculation completed, Kinf = " Kinf ;
ECHO "tracking of Geom_A done" ;


END: ;






